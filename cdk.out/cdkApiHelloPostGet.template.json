{
  "Resources": {
    "todoTableC937F2F9": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "dbProvaApiCrudGetPost"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/todoTable/Resource"
      }
    },
    "crudTodoFnServiceRole223D49BF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/crudTodoFn/ServiceRole/Resource"
      }
    },
    "crudTodoFnServiceRoleDefaultPolicy69D5A6E0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "todoTableC937F2F9",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "crudTodoFnServiceRoleDefaultPolicy69D5A6E0",
        "Roles": [
          {
            "Ref": "crudTodoFnServiceRole223D49BF"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/crudTodoFn/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "crudTodoFn9FE9433C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "11d145c648cdde21f8159158ebb26a6a99300afe759968d6c6c7b4b29cf27201.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "crudTodoFnServiceRole223D49BF",
            "Arn"
          ]
        },
        "Architectures": [
          "arm64"
        ],
        "Environment": {
          "Variables": {
            "TODO_TABLE_NAME": "dbProvaApiCrudGetPost",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.crudTodo",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "crudTodoFnServiceRoleDefaultPolicy69D5A6E0",
        "crudTodoFnServiceRole223D49BF"
      ],
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/crudTodoFn/Resource",
        "aws:asset:path": "asset.11d145c648cdde21f8159158ebb26a6a99300afe759968d6c6c7b4b29cf27201",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "EndpointApiCrud03F7A092": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "crud"
      },
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/EndpointApiCrud/Resource"
      }
    },
    "EndpointApiCrudCloudWatchRole78FBE33D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/EndpointApiCrud/CloudWatchRole/Resource"
      }
    },
    "EndpointApiCrudAccount0580712A": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "EndpointApiCrudCloudWatchRole78FBE33D",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "EndpointApiCrud03F7A092"
      ],
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/EndpointApiCrud/Account"
      }
    },
    "EndpointApiCrudDeploymentC33730BCcfb149f187e8ec14090dde0a990a4bb5": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "EndpointApiCrud03F7A092"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "EndpointApiCrudproxyANY6872F6B8",
        "EndpointApiCrudproxyF80CE757",
        "EndpointApiCrudANY8233FDFE"
      ],
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/EndpointApiCrud/Deployment/Resource"
      }
    },
    "EndpointApiCrudDeploymentStageprod2B5345D7": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "EndpointApiCrud03F7A092"
        },
        "DeploymentId": {
          "Ref": "EndpointApiCrudDeploymentC33730BCcfb149f187e8ec14090dde0a990a4bb5"
        },
        "StageName": "prod"
      },
      "DependsOn": [
        "EndpointApiCrudAccount0580712A"
      ],
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/EndpointApiCrud/DeploymentStage.prod/Resource"
      }
    },
    "EndpointApiCrudproxyF80CE757": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "EndpointApiCrud03F7A092",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "EndpointApiCrud03F7A092"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/EndpointApiCrud/Default/{proxy+}/Resource"
      }
    },
    "EndpointApiCrudproxyANYApiPermissioncdkApiHelloPostGetEndpointApiCrud95B559D9ANYproxy96175D55": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "crudTodoFn9FE9433C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "EndpointApiCrud03F7A092"
              },
              "/",
              {
                "Ref": "EndpointApiCrudDeploymentStageprod2B5345D7"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/EndpointApiCrud/Default/{proxy+}/ANY/ApiPermission.cdkApiHelloPostGetEndpointApiCrud95B559D9.ANY..{proxy+}"
      }
    },
    "EndpointApiCrudproxyANYApiPermissionTestcdkApiHelloPostGetEndpointApiCrud95B559D9ANYproxyD4155013": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "crudTodoFn9FE9433C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "EndpointApiCrud03F7A092"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/EndpointApiCrud/Default/{proxy+}/ANY/ApiPermission.Test.cdkApiHelloPostGetEndpointApiCrud95B559D9.ANY..{proxy+}"
      }
    },
    "EndpointApiCrudproxyANY6872F6B8": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "EndpointApiCrudproxyF80CE757"
        },
        "RestApiId": {
          "Ref": "EndpointApiCrud03F7A092"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "crudTodoFn9FE9433C",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/EndpointApiCrud/Default/{proxy+}/ANY/Resource"
      }
    },
    "EndpointApiCrudANYApiPermissioncdkApiHelloPostGetEndpointApiCrud95B559D9ANY7929AB0D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "crudTodoFn9FE9433C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "EndpointApiCrud03F7A092"
              },
              "/",
              {
                "Ref": "EndpointApiCrudDeploymentStageprod2B5345D7"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/EndpointApiCrud/Default/ANY/ApiPermission.cdkApiHelloPostGetEndpointApiCrud95B559D9.ANY.."
      }
    },
    "EndpointApiCrudANYApiPermissionTestcdkApiHelloPostGetEndpointApiCrud95B559D9ANYF41F3BA2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "crudTodoFn9FE9433C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "EndpointApiCrud03F7A092"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/EndpointApiCrud/Default/ANY/ApiPermission.Test.cdkApiHelloPostGetEndpointApiCrud95B559D9.ANY.."
      }
    },
    "EndpointApiCrudANY8233FDFE": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "EndpointApiCrud03F7A092",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "EndpointApiCrud03F7A092"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "crudTodoFn9FE9433C",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/EndpointApiCrud/Default/ANY/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VRy07DMBD8Fu7OQqnEPS3ixKMK3KONvZRNYjuKbUoU5d+xnQLlNA95xrv2LWy2cHOFJ1dI1RU9NzC/epSdiFY9q8mgtiqab9j0JPbvJpNF9KgbhbWxiloHzxkegpGerRGMGubKroGMB9uznJJc2SLctkbnyDsoE0QNuyA78jt0dK6HOQZ+W1OYRs3ORbUIHPiInk44wfyYj1fkfDlwvvSPllLaYLy4p6G3k6ZIo3uh4r7HPOlKYtSGUVKe4zDar+nHORev/In8h1XJWtmyiMtzL8EPwYu8W+plc/wXj3xvjWKfd0nPCK27/tzcQfqP1jEXY5yaNUG14jfMkMKpqwEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "cdkApiHelloPostGet/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "todoTableName": {
      "Value": {
        "Ref": "todoTableC937F2F9"
      }
    },
    "EndpointApiCrudEndpoint72633CF3": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "EndpointApiCrud03F7A092"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "EndpointApiCrudDeploymentStageprod2B5345D7"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}